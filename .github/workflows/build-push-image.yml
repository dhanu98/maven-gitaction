name: Build, Store Artifacts, and Push Docker Image

on:
  push:
    branches:
      - main  # Trigger action on pushing to the main branch
  pull_request:
    branches:
      - main  # Trigger action for pull requests to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code from repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up JDK (Assume Java 11, change if necessary)
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adoptopenjdk'

      # Build the Java project using Maven
      - name: Build with Maven
        run: |
          mvn clean install -DskipTests  # Skip tests if you don't need them for now

      # Set up Docker Buildx (required for pushing multi-platform Docker images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Set up Docker Cache to speed up future builds
      - name: Set up Docker Cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/my-app:latest

      # Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest

      # Save build artifacts (updated to use @github/upload-artifact)
      - name: Save build artifacts
        uses: github/upload-artifact@v1
        with:
          name: java-build-artifacts
          path: ./target/*.jar  # Adjust if you're generating different output files (e.g., WAR files)
